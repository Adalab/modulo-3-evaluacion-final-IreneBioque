{"version":3,"sources":["services/api.js","components/Form.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","components/NotFoundPage.js","components/App.js","index.js"],"names":["callToApi","searchName","fetch","then","response","json","dataApi","results","map","data","name","species","id","image","status","planet","origin","episodes","episode","length","Form","props","onSubmit","ev","preventDefault","htmlFor","type","value","valueForm","onChange","handleSearchName","target","CharacterCard","to","characterData","className","src","alt","title","CharactherList","characther","character","ContactDetail","characterName","NotFoundPage","App","useState","characters","Setcharacters","setSearchName","useEffect","filteredData","filter","toLocaleLowerCase","includes","orden","sort","console","log","routeData","useRouteMatch","characterId","params","selectedContact","find","parseInt","path","exact","CharacterDetail","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89a88df1.chunk.js","sourcesContent":["const callToApi = (searchName) => {\r\n  return fetch(`https://rickandmortyapi.com/api/character/?name=${searchName}`)\r\n    .then((response) => response.json())\r\n    .then((dataApi) => {\r\n      const character = dataApi.results.map((data) => {\r\n        return {\r\n          name: data.name,\r\n          species: data.species,\r\n          id: data.id,\r\n          image: data.image,\r\n          status: data.status,\r\n          planet: data.origin.name,\r\n          episodes: data.episode.length,\r\n        };\r\n      });\r\n      return character;\r\n    });\r\n};\r\n\r\nexport default callToApi;\r\n","const Form = (props) => {\r\n  const handleInputChange = (ev) => {\r\n    props.handleSearchName(ev.target.value);\r\n  };\r\n  const handleFormSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <label htmlFor='name'>Busca por el nombre de tu personaje:</label>\r\n        <input\r\n          type='text'\r\n          name='name'\r\n          id='name'\r\n          value={props.valueForm}\r\n          onChange={handleInputChange}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <Link to={`./character/${props.characterData.id}`}>\r\n      <>\r\n        <img\r\n          className=\"card__img\"\r\n          src={props.characterData.image}\r\n          alt={`Foto de ${props.characterData.name}`}\r\n          title={`Foto de ${props.characterData.name}`}\r\n        />\r\n        <h4>{props.characterData.name}</h4>\r\n        <p>{props.characterData.species}</p>\r\n      </>\r\n    </Link>\r\n  );\r\n};\r\n\r\n\r\nexport default CharacterCard;\r\n","import CharacterCard from './CharacterCard';\r\n\r\nconst CharactherList = (props) => {\r\n  const characther = props.data.map((character) => {\r\n    return (\r\n      <li key={character.id}>\r\n        <CharacterCard characterData={character} />\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <section>\r\n      {props.data.length !== 0 ? (\r\n        <ul>{characther}</ul>\r\n      ) : (\r\n        <p>{`El personaje ${props.searchName} no existe.`}</p>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\nexport default CharactherList;\r\n","\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst ContactDetail = (props) => {\r\n\r\n   return (\r\n     <>\r\n       <Link to=\"/\">\r\n         <p>Volver atrás</p>\r\n       </Link>\r\n       <img\r\n         src={props.character.image}\r\n         alt={props.characterName}\r\n         title={props.characterName}\r\n       />\r\n       <ul>\r\n         <li>Species: {props.character.species}</li>\r\n         <li>Origin: {props.character.planet}</li>\r\n         <li>Status: {props.character.status}</li>\r\n         <li>Episodes: {props.character.episodes}</li>\r\n       </ul>\r\n     </>\r\n   );\r\n }\r\n export default ContactDetail;\r\n","const NotFoundPage = () => {\r\n  return (\r\n    <div>\r\n      <p>Página no encontrada</p>\r\n    </div>\r\n  );\r\n};\r\nexport default NotFoundPage;\r\n","import { useEffect, useState } from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport '../styles/App.scss';\nimport callToApi from '../services/api';\nimport Form from './Form';\nimport CharactherList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport NotFoundPage from './NotFoundPage';\n\nconst App = () => {\n  const [characters, Setcharacters] = useState([]);\n  const [searchName, setSearchName] = useState('');\n\n  useEffect(() => {\n    callToApi(searchName).then((response) => {\n      Setcharacters(response);\n    });\n  }, [searchName]);\n\n  const handleSearchName = (value) => {\n    setSearchName(value);\n  };\n\n  const filteredData = characters.filter((character) =>\n    character.name.toLocaleLowerCase().includes(searchName.toLocaleLowerCase())\n  );\n  const orden = filteredData.sort();\n  console.log(orden);\n  const routeData = useRouteMatch('/character/:id');\n  const characterId = routeData !== null ? routeData.params.id : '';\n  const selectedContact = characters.find(\n    (character) => character.id === parseInt(characterId)\n  );\n\n  return (\n    <div>\n      <Switch>\n        <Route path='/' exact>\n          <h1>Rick y Morty</h1>\n          <Form valueForm={searchName} handleSearchName={handleSearchName} />\n          <h2>Personajes con el nombre: {searchName}</h2>\n          <CharactherList data={filteredData} searchName={searchName} />\n        </Route>\n\n        <Route path='/character/:id'>\n          <section>\n            <CharacterDetail character={selectedContact} />\n          </section>\n        </Route>\n        <Route>\n          <NotFoundPage />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}