{"version":3,"sources":["services/api.js","images/Logo.png","components/Header.js","components/FilterByName.js","components/FilterBySpice.js","components/FilterByOirigin.js","components/Form.js","components/CharacterCard.js","components/CharacterList.js","images/portal.png","components/NotFoundPage.js","components/CharacterDetail.js","components/Footer.js","components/App.js","index.js"],"names":["callToApi","searchName","fetch","then","response","json","dataApi","results","map","data","name","species","id","image","status","planet","origin","episodes","episode","length","Header","className","src","Logo","alt","FilterByName","props","htmlFor","placeholder","value","valueSearchName","onChange","ev","handleSearchName","target","defaultProps","inputType","FilterBySpice","searchSpices","handleSearchSpices","currentTarget","FilterByOrigin","type","handleSearchOrigin","checked","Origin","Form","onSubmit","preventDefault","valueSearchSpice","handleSearchUnknow","Unknow","handleSearchEarth","earth","handleSearchAbadango","abadango","CharacterCard","to","characterData","title","CharactherList","characther","character","NotFoundPage","Portal","ContactDetail","undefined","characterName","class","Footer","App","useState","characters","setCharacters","setSearchName","setsearchSpices","Abadango","searchOrigin","setSearchOrigin","useEffect","filteredData","filter","toLocaleLowerCase","includes","sort","a","b","routeData","useRouteMatch","characterId","params","selectedContact","find","parseInt","path","exact","unknow","CharacterDetail","ReactDOM","render","document","getElementById"],"mappings":"2VAmBeA,G,YAnBG,SAACC,GACjB,OAAOC,MAAM,mDAAD,OAAoDD,IAC7DE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAYL,OAXkBA,EAAQC,QAAQC,KAAI,SAACC,GACrC,MAAO,CACLC,KAAMD,EAAKC,KACXC,QAASF,EAAKE,QACdC,GAAIH,EAAKG,GACTC,MAAOJ,EAAKI,MACZC,OAAQL,EAAKK,OACbC,OAAQN,EAAKO,OAAON,KACpBO,SAAUR,EAAKS,QAAQC,gBCZlB,MAA0B,iC,eCU1BC,EAPA,WACb,OACE,wBAAQC,UAAU,SAAlB,SACE,qBAAKC,IAAKC,EAAMC,IAAI,sBAAsBH,UAAU,mBCHpDI,G,MAAe,SAACC,GAKpB,OACE,qCACE,uBAAOC,QAAQ,OAAON,UAAU,cAAhC,0BAGA,uBACEA,UAAU,cACVX,KAAK,OACLE,GAAG,OACHgB,YAAY,eACZC,MAAOH,EAAMI,gBACbC,SAfoB,SAACC,GACzBN,EAAMO,iBAAiBD,EAAGE,OAAOL,eAmBrCJ,EAAaU,aAAe,CAC1BC,UAAW,QAMEX,QCJAY,EAzBO,SAACX,GAIrB,OACE,qCACE,uBAAOL,UAAU,cAAcM,QAAQ,SAAvC,qBAGA,yBACEN,UAAU,cACVX,KAAK,SACLE,GAAG,SACHiB,MAAOH,EAAMY,aACbP,SAbqB,SAACC,GAC1BN,EAAMa,mBAAmBP,EAAGQ,cAAcX,QAOxC,UAOE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,QAAd,0BCDOY,EArBQ,SAACf,GAItB,OACE,qCACE,uBAAOC,QAAQ,OAAON,UAAU,eAAhC,SACGK,EAAMhB,OAET,uBACEgC,KAAK,WACLrB,UAAU,eACVX,KAAK,OACLE,GAAG,OACHiB,MAAOH,EAAMhB,KACbqB,SAdoB,SAACC,GACzBN,EAAMiB,mBAAmBX,EAAGE,OAAOU,UAc/BA,QAASlB,EAAMmB,aC0BRC,EArCF,SAACpB,GAIZ,OACE,mCACE,uBAAML,UAAU,OAAO0B,SALF,SAACf,GACxBA,EAAGgB,kBAID,UACE,cAAC,EAAD,CACEf,iBAAkBP,EAAMO,iBACxBH,gBAAiBJ,EAAMI,kBAEzB,cAAC,EAAD,CACEmB,iBAAkBvB,EAAMY,aACxBC,mBAAoBb,EAAMa,qBAE5B,0BAASlB,UAAU,iBAAnB,UACE,cAAC,EAAD,CACEX,KAAK,SACLiC,mBAAoBjB,EAAMwB,mBAC1BL,OAAQnB,EAAMyB,SAEhB,cAAC,EAAD,CACEzC,KAAK,QACLiC,mBAAoBjB,EAAM0B,kBAC1BP,OAAQnB,EAAM2B,QAEhB,cAAC,EAAD,CACE3C,KAAK,WACLiC,mBAAoBjB,EAAM4B,qBAC1BT,OAAQnB,EAAM6B,oBCdXC,G,MAjBO,SAAC9B,GACrB,OACE,cAAC,IAAD,CAAM+B,GAAE,sBAAiB/B,EAAMgC,cAAc9C,IAA7C,SACE,qCACE,qBACES,UAAU,qBACVC,IAAKI,EAAMgC,cAAc7C,MACzBW,IAAG,kBAAaE,EAAMgC,cAAchD,MACpCiD,MAAK,kBAAajC,EAAMgC,cAAchD,QAExC,oBAAIW,UAAU,sBAAd,SAAqCK,EAAMgC,cAAchD,OACzD,mBAAGW,UAAU,sBAAb,SAAoCK,EAAMgC,cAAc/C,iBCQjDiD,G,MAlBQ,SAAClC,GACtB,IAAMmC,EAAanC,EAAMjB,KAAKD,KAAI,SAACsD,GACjC,OACE,oBAAuBzC,UAAU,gBAAjC,SACE,cAAC,EAAD,CAAeqC,cAAeI,KADvBA,EAAUlD,OAKvB,OACE,yBAASS,UAAU,mBAAnB,SACyB,IAAtBK,EAAMjB,KAAKU,OACV,oBAAIE,UAAU,OAAd,SAAsBwC,IAEtB,mBAAGxC,UAAU,QAAb,gCAAsCK,EAAMzB,WAA5C,oDCjBO,MAA0B,mCCoB1B8D,G,MAhBM,WACnB,OACE,sBAAK1C,UAAU,eAAf,UACE,oBAAGA,UAAU,qBAAb,2EAC2D,OAE3D,cAAC,IAAD,CAAMoC,GAAG,IAAT,SACE,qBACEpC,UAAU,oBACVC,IAAK0C,EACLxC,IAAI,gDC4BCyC,EArCO,SAACvC,GACrB,YAAwBwC,IAApBxC,EAAMoC,UAEN,gCACE,cAAC,IAAD,CAAML,GAAG,IAAIpC,UAAU,wBAAvB,SACE,kDAEF,0BAASA,UAAU,YAAnB,UACE,qBACEA,UAAU,iBACVC,IAAKI,EAAMoC,UAAUjD,MACrBW,IAAKE,EAAMyC,cACXR,MAAOjC,EAAMyC,gBAEf,sBAAK9C,UAAU,kBAAf,UACE,oBAAIA,UAAU,wBAAd,SAAuCK,EAAMoC,UAAUpD,OACvD,+BACE,2CAAcgB,EAAMoC,UAAUnD,WAC9B,0CAAae,EAAMoC,UAAU/C,UAC7B,yCACU,IACoB,SAA3BW,EAAMoC,UAAUhD,OACf,mBAAGsD,MAAM,iBAET1C,EAAMoC,UAAUhD,UAGpB,4CAAeY,EAAMoC,UAAU7C,wBAOlC,cAAC,EAAD,KCjCIoD,G,MAJA,WACb,OAAO,wBAAQhD,UAAU,SAAlB,4CC+GMiD,EAtGH,WACV,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOtE,EAAP,KAAmByE,EAAnB,KACA,EAAwCH,mBAAS,OAAjD,mBAAOjC,EAAP,KAAqBqC,EAArB,KACA,EAAwCJ,mBAAS,CAC/ClB,OAAO,EACPF,QAAQ,EACRyB,UAAU,IAHZ,mBAAOC,EAAP,KAAqBC,EAArB,KAMAC,qBAAU,WACR/E,EAAUC,GAAYE,MAAK,SAACC,GAC1BqE,EAAcrE,QAEf,CAACH,IAEJ,IAeM+E,EAAeR,EAClBS,QAAO,SAACnB,GAAD,OACNA,EAAUpD,KACPwE,oBACAC,SAASlF,EAAWiF,wBAExBD,QACC,SAACnB,GAAD,MACmB,QAAjBxB,GAA0BA,IAAiBwB,EAAUnD,WAExDsE,QAAO,SAACnB,GACP,OAAIe,EAAaxB,MACa,kBAArBS,EAAU/C,OACR8D,EAAa1B,OACM,YAArBW,EAAU/C,QACR8D,EAAaD,UACM,aAArBd,EAAU/C,UAIpBqE,MAAK,SAACC,EAAGC,GACR,OAAID,EAAE3E,KAAO4E,EAAE5E,KACN,EACE2E,EAAE3E,KAAO4E,EAAE5E,MACZ,EAED,KAGP6E,EAAYC,YAAc,kBAC1BC,EAA4B,OAAdF,EAAqBA,EAAUG,OAAO9E,GAAK,GACzD+E,EAAkBnB,EAAWoB,MACjC,SAAC9B,GAAD,OAAeA,EAAUlD,KAAOiF,SAASJ,MAG3C,OACE,sBAAKpE,UAAU,OAAf,UACE,cAAC,EAAD,IACA,+BACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOyE,KAAK,IAAIC,OAAK,EAArB,UACE,cAAC,EAAD,CACEjE,gBAAiB7B,EACjBgC,iBA1Da,SAACJ,GACxB6C,EAAc7C,IA0DJoB,iBAAkBX,EAClBC,mBAzDe,SAACV,GAC1B8C,EAAgB9C,IAyDNuB,kBAvDc,SAACR,GACzBkC,EAAgB,2BAAKD,GAAN,IAAoBxB,MAAOT,MAuDhCM,mBArDe,SAACN,GAC1BkC,EAAgB,2BAAKD,GAAN,IAAoB1B,OAAQP,MAqDjCU,qBAnDiB,SAACV,GAC5BkC,EAAgB,2BAAKD,GAAN,IAAoBD,SAAUhC,MAmDnCS,MAAOwB,EAAaxB,MACpB2C,OAAQnB,EAAa1B,OACrBI,SAAUsB,EAAaD,WAEzB,cAAC,EAAD,CAAgBnE,KAAMuE,EAAc/E,WAAYA,OAGlD,cAAC,IAAD,CAAO6F,KAAK,iBAAZ,SACE,yBAASzE,UAAU,kBAAnB,SACE,cAAC4E,EAAD,CAAiBnC,UAAW6B,QAGhC,cAAC,IAAD,UACE,cAAC,EAAD,WAIN,cAAC,EAAD,QCxGNO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.98057048.chunk.js","sourcesContent":["const callToApi = (searchName) => {\r\n  return fetch(`https://rickandmortyapi.com/api/character/?name=${searchName}`)\r\n    .then((response) => response.json())\r\n    .then((dataApi) => {\r\n      const character = dataApi.results.map((data) => {\r\n        return {\r\n          name: data.name,\r\n          species: data.species,\r\n          id: data.id,\r\n          image: data.image,\r\n          status: data.status,\r\n          planet: data.origin.name,\r\n          episodes: data.episode.length,\r\n        };\r\n      });\r\n      return character;\r\n    });\r\n};\r\n\r\nexport default callToApi;\r\n","export default __webpack_public_path__ + \"static/media/Logo.de13d484.png\";","import Logo from '../images/Logo.png';\r\nimport '../styles/layout/_header.scss';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className='header'>\r\n      <img src={Logo} alt='Logo-Rick-and-Morty' className='header__img' />\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import '../styles/layout/_form.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FilterByName = (props) => {\r\n  const handleInputChange = (ev) => {\r\n    props.handleSearchName(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor='name' className='form__label'>\r\n        Search Name:\r\n      </label>\r\n      <input\r\n        className='form__input'\r\n        name='name'\r\n        id='name'\r\n        placeholder='Search Name:'\r\n        value={props.valueSearchName}\r\n        onChange={handleInputChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\nFilterByName.defaultProps = {\r\n  inputType: 'text',\r\n};\r\nFilterByName.propTypes = {\r\n  inputValue: PropTypes.string,\r\n  handleSearchName: PropTypes.func.isRequired,\r\n};\r\nexport default FilterByName;\r\n","import '../styles/layout/_form.scss';\r\n\r\nconst FilterBySpice = (props) => {\r\n  const handleSelectChange = (ev) => {\r\n    props.handleSearchSpices(ev.currentTarget.value);\r\n  };\r\n  return (\r\n    <>\r\n      <label className='form__label' htmlFor='gender'>\r\n        Spices:\r\n      </label>\r\n      <select\r\n        className='form__input'\r\n        name='Spices'\r\n        id='Spices'\r\n        value={props.searchSpices}\r\n        onChange={handleSelectChange}\r\n      >\r\n        <option value='all'>All</option>\r\n        <option value='Human'>Human</option>\r\n        <option value='Alien'>Alien</option>\r\n        <option value='Humanoid'>Humanoid</option>\r\n        <option value='Robot'>Robot</option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\nexport default FilterBySpice;\r\n","const FilterByOrigin = (props) => {\r\n  const handleInputChange = (ev) => {\r\n    props.handleSearchOrigin(ev.target.checked);\r\n  };\r\n  return (\r\n    <>\r\n      <label htmlFor='name' className='labelChecked'>\r\n        {props.name}\r\n      </label>\r\n      <input\r\n        type='checkbox'\r\n        className='inputChecked'\r\n        name='name'\r\n        id='name'\r\n        value={props.name}\r\n        onChange={handleInputChange}\r\n        checked={props.Origin}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default FilterByOrigin;\r\n","import FilterByName from './FilterByName';\r\nimport FilterBySpice from './FilterBySpice';\r\nimport '../styles/layout/_form.scss';\r\nimport FilterByOrigin from './FilterByOirigin';\r\n\r\nconst Form = (props) => {\r\n  const handleFormSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      <form className='form' onSubmit={handleFormSubmit}>\r\n        <FilterByName\r\n          handleSearchName={props.handleSearchName}\r\n          valueSearchName={props.valueSearchName}\r\n        />\r\n        <FilterBySpice\r\n          valueSearchSpice={props.searchSpices}\r\n          handleSearchSpices={props.handleSearchSpices}\r\n        />\r\n        <section className='form__checkeds'>\r\n          <FilterByOrigin\r\n            name='Unknow'\r\n            handleSearchOrigin={props.handleSearchUnknow}\r\n            Origin={props.Unknow}\r\n          />\r\n          <FilterByOrigin\r\n            name='Earth'\r\n            handleSearchOrigin={props.handleSearchEarth}\r\n            Origin={props.earth}\r\n          />\r\n          <FilterByOrigin\r\n            name='Abadango'\r\n            handleSearchOrigin={props.handleSearchAbadango}\r\n            Origin={props.abadango}\r\n          />\r\n        </section>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { Link } from 'react-router-dom';\r\nimport '../styles/layout/_characterList.scss';\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <Link to={`./character/${props.characterData.id}`}>\r\n      <>\r\n        <img\r\n          className='list__element--img'\r\n          src={props.characterData.image}\r\n          alt={`Foto de ${props.characterData.name}`}\r\n          title={`Foto de ${props.characterData.name}`}\r\n        />\r\n        <h4 className='list__element--text'>{props.characterData.name}</h4>\r\n        <p className='list__element--text'>{props.characterData.species}</p>\r\n      </>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import CharacterCard from './CharacterCard';\r\nimport '../styles/layout/_characterList.scss';\r\nimport '../styles/components/_links.scss';\r\n\r\nconst CharactherList = (props) => {\r\n  const characther = props.data.map((character) => {\r\n    return (\r\n      <li key={character.id} className='list__element'>\r\n        <CharacterCard characterData={character} />\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <section className='sectionCharacter'>\r\n      {props.data.length !== 0 ? (\r\n        <ul className='list'>{characther}</ul>\r\n      ) : (\r\n        <p className='error'>{`El personaje ${props.searchName} no existe en esta dimensión o galaxia.`}</p>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\nexport default CharactherList;\r\n","export default __webpack_public_path__ + \"static/media/portal.0ca4959c.png\";","import { Link } from 'react-router-dom';\r\nimport Portal from '../images/portal.png';\r\nimport '../styles/layout/_notfoundpage.scss';\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <div className='notFoundPage'>\r\n      <p className='notFoundPage__text'>\r\n        Página no encontrada. Rápido Morty, vuelve por el portal{' '}\r\n      </p>\r\n      <Link to='/'>\r\n        <img\r\n          className='notFoundPage__img'\r\n          src={Portal}\r\n          alt='Portal, volver a página de inicio'\r\n        />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nexport default NotFoundPage;\r\n","import { Link } from 'react-router-dom';\r\nimport '../styles/layout/_characterDetail.scss';\r\nimport NotFoundPage from './NotFoundPage';\r\nimport '../styles/components/_links.scss';\r\n\r\nconst ContactDetail = (props) => {\r\n  if (props.character !== undefined) {\r\n    return (\r\n      <div>\r\n        <Link to='/' className='characterDetail__link'>\r\n          <p>Volver atrás</p>\r\n        </Link>\r\n        <article className='character'>\r\n          <img\r\n            className='character__img'\r\n            src={props.character.image}\r\n            alt={props.characterName}\r\n            title={props.characterName}\r\n          />\r\n          <div className='character__list'>\r\n            <h4 className='character__list--name'>{props.character.name}</h4>\r\n            <ul>\r\n              <li>Species: {props.character.species}</li>\r\n              <li>Origin: {props.character.planet}</li>\r\n              <li>\r\n                Status:{' '}\r\n                {props.character.status === 'Dead' ? (\r\n                  <i class='fas fa-skull'></i>\r\n                ) : (\r\n                  props.character.status\r\n                )}\r\n              </li>\r\n              <li>Episodes: {props.character.episodes}</li>\r\n            </ul>\r\n          </div>\r\n        </article>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <NotFoundPage />;\r\n  }\r\n};\r\nexport default ContactDetail;\r\n","import '../styles/layout/_footer.scss';\r\n\r\nconst Footer = () => {\r\n  return <footer className='footer'> &copy; Irene Bioque Muñoz </footer>;\r\n};\r\n\r\nexport default Footer;\r\n","import { useEffect, useState } from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport '../styles/layout/_characterDetail.scss';\nimport '../styles/App.scss';\nimport callToApi from '../services/api';\nimport Header from './Header';\nimport Form from './Form';\nimport CharactherList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport NotFoundPage from './NotFoundPage';\nimport Footer from './Footer';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [searchName, setSearchName] = useState('');\n  const [searchSpices, setsearchSpices] = useState('all');\n  const [searchOrigin, setSearchOrigin] = useState({\n    earth: false,\n    Unknow: false,\n    Abadango: false,\n  });\n\n  useEffect(() => {\n    callToApi(searchName).then((response) => {\n      setCharacters(response);\n    });\n  }, [searchName]);\n\n  const handleSearchName = (value) => {\n    setSearchName(value);\n  };\n  const handleSearchSpices = (value) => {\n    setsearchSpices(value);\n  };\n  const handleSearchEarth = (checked) => {\n    setSearchOrigin({ ...searchOrigin, earth: checked });\n  };\n  const handleSearchUnknow = (checked) => {\n    setSearchOrigin({ ...searchOrigin, Unknow: checked });\n  };\n  const handleSearchAbadango = (checked) => {\n    setSearchOrigin({ ...searchOrigin, Abadango: checked });\n  };\n  const filteredData = characters\n    .filter((character) =>\n      character.name\n        .toLocaleLowerCase()\n        .includes(searchName.toLocaleLowerCase())\n    )\n    .filter(\n      (character) =>\n        searchSpices === 'all' || searchSpices === character.species\n    )\n    .filter((character) => {\n      if (searchOrigin.earth) {\n        return character.planet === 'Earth (C-137)';\n      } else if (searchOrigin.Unknow) {\n        return character.planet === 'unknown';\n      } else if (searchOrigin.Abadango) {\n        return character.planet === 'Abadango';\n      }\n      return true;\n    })\n    .sort((a, b) => {\n      if (a.name > b.name) {\n        return 1;\n      } else if (a.name < b.name) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n  const routeData = useRouteMatch('/character/:id');\n  const characterId = routeData !== null ? routeData.params.id : '';\n  const selectedContact = characters.find(\n    (character) => character.id === parseInt(characterId)\n  );\n\n  return (\n    <div className='page'>\n      <Header />\n      <main>\n        <Switch>\n          <Route path='/' exact>\n            <Form\n              valueSearchName={searchName}\n              handleSearchName={handleSearchName}\n              valueSearchSpice={searchSpices}\n              handleSearchSpices={handleSearchSpices}\n              handleSearchEarth={handleSearchEarth}\n              handleSearchUnknow={handleSearchUnknow}\n              handleSearchAbadango={handleSearchAbadango}\n              earth={searchOrigin.earth}\n              unknow={searchOrigin.Unknow}\n              abadango={searchOrigin.Abadango}\n            />\n            <CharactherList data={filteredData} searchName={searchName} />\n          </Route>\n\n          <Route path='/character/:id'>\n            <section className='characterDetail'>\n              <CharacterDetail character={selectedContact} />\n            </section>\n          </Route>\n          <Route>\n            <NotFoundPage />\n          </Route>\n        </Switch>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}